name: Build and publish Docker image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker registry
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Get versions from Dockerfile
        run: |
          python_semver_full=$(head -n1 Dockerfile | grep -oP '([0-9\.]+)')
          python_semver_major=$(echo "$python_semver_full" | cut -d '.' -f1)
          python_semver_minor=$(echo "$python_semver_full" | cut -d '.' -f2)
          python_semver_patch=$(echo "$python_semver_full" | cut -d '.' -f3)
          echo "python_semver_full=$python_semver_full"   | tee -a $GITHUB_ENV
          echo "python_semver_major=$python_semver_major" | tee -a $GITHUB_ENV
          echo "python_semver_minor=$python_semver_minor" | tee -a $GITHUB_ENV
          echo "python_semver_patch=$python_semver_patch" | tee -a $GITHUB_ENV

          poetry_semver_full=$(grep "POETRY_VERSION=" Dockerfile | grep -oP '([0-9\.]+)')
          poetry_semver_major=$(echo "$poetry_semver_full" | cut -d '.' -f1)
          poetry_semver_minor=$(echo "$poetry_semver_full" | cut -d '.' -f2)
          poetry_semver_patch=$(echo "$poetry_semver_full" | cut -d '.' -f3)
          echo "poetry_semver_full=$poetry_semver_full"   | tee -a $GITHUB_ENV
          echo "poetry_semver_major=$poetry_semver_major" | tee -a $GITHUB_ENV
          echo "poetry_semver_minor=$poetry_semver_minor" | tee -a $GITHUB_ENV
          echo "poetry_semver_patch=$poetry_semver_patch" | tee -a $GITHUB_ENV

          echo "version=${python_semver_full}-${poetry_semver_full}" | tee -a $GITHUB_ENV

      - name: Check if the version tag already exists
        uses: mukunku/tag-exists-action@v1.5.0
        id: check_version_tag
        with:
          tag: ${{ env.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: python-poetry:latest

      - name: Test all required executables and build release body
        run: |
          echo '## Python' > release_body.md
          echo '' >> release_body.md
          echo '```' >> release_body.md
          docker run --rm python-poetry python --version >> release_body.md
          echo '```' >> release_body.md
          echo '' >> release_body.md

          echo '## Poetry' >> release_body.md
          echo '' >> release_body.md
          echo '```' >> release_body.md
          docker run --rm python-poetry poetry --version >> release_body.md
          echo '```' >> release_body.md
          echo '' >> release_body.md

      - name: Create release
        uses: actions/create-release@v1
        if: ${{ github.ref == 'refs/heads/main' && steps.check_version_tag.outputs.exists == 'false' }}
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          body_path: release_body.md
          draft: false
          prerelease: false

      - name: Cross-build and push to Docker Hub
        uses: docker/build-push-action@v5
        if: ${{ github.ref == 'refs/heads/main' && steps.check_version_tag.outputs.exists == 'false' }}
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository_owner }}/python-poetry:latest
            ${{ github.repository_owner }}/python-poetry:${{ env.version }}
            ${{ github.repository_owner }}/python-poetry:${{ env.python_semver_major }}.${{ env.python_semver_minor }}-${{ env.poetry_semver_full }}
            ${{ github.repository_owner }}/python-poetry:${{ env.python_semver_major }}.${{ env.python_semver_minor }}
            ${{ github.repository_owner }}/python-poetry:${{ env.python_semver_major }}
          labels: |
            org.opencontainers.image.version=${{ env.version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.ref.name=${{ github.ref }}
          platforms: linux/amd64,linux/arm64
